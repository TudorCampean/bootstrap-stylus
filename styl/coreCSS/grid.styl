//
// Grid system
// --------------------------------------------------

// Set the container width and override it for fixed navbars in media queries
.container 
  container-fixed()

// Mobile-first defaults
.row 
  make-row()

$grid-columns-base
  position relative
  // Prevent columns from collapsing when empty
  min-height 1px
  // Inner gutter via padding
  padding-left  (grid-gutter-width / 2)
  padding-right (grid-gutter-width / 2)

for i in (1..12)
  .col-xs-{i}
  .col-sm-{i}
  .col-md-{i}
  .col-lg-{i}
    @extend $grid-columns-base

//
// Container and grid column sizing
//

// Extra small grid
//
// Grid classes for extra small devices like smartphones. No offset, push, or
// pull classes are present here due to the size of the target.
//
// Note that `.col-xs-12` doesn't get floated on purpose—there's no need since
// it's full-width.
$float-left
  float left

for i in (1..11)
  .col-xs-{i}
    @extend $float-left  
    width ((i / grid-columns)*100)%

.col-xs-12
  width 100%

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.
//
// Note that `.col-sm-12` doesn't get floated on purpose—there's no need since
// it's full-width..

@media media-screen-tablet
  .container 
    max-width container-tablet
  
  $float-left-screen-tablet
    float left

  for i in (1..11)
    .col-sm-{i}
      @extend $float-left-screen-tablet  
      width ((i / grid-columns)*100)%

  .col-sm-12
    width 100%  

  // Push and pull columns for source order changes
  for i in (1..11)
    .col-sm-push-{i}
      left ((i / grid-columns)*100)%
    .col-sm-pull-{i}
      right ((i / grid-columns)*100)%  
    .col-sm-offset-{i}
      margin-left ((i / grid-columns)*100)%

// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.
//
// Note that `.col-md-12` doesn't get floated on purpose—there's no need since
// it's full-width.
@media media-screen-desktop
  .container 
     max-width container-desktop

  $float-left-screen-desktop
    float left
  
  for i in (1..11)
    .col-md-{i}
      @extend $float-left-screen-desktop  
      width ((i / grid-columns)*100)%

  .col-md-12
    width 100%
  
  .col-md-push-0  
    left auto
  .col-md-pull-0  
    right auto
  .col-md-offset-0
    margin-left auto
  // Push ,pull and offsets columns for source order changes
  for i in (1..11)
    .col-md-push-{i}
      left ((i / grid-columns)*100)%  
    .col-md-pull-{i}
      right ((i / grid-columns)*100)%  
    .col-md-offset-{i}
      margin-left ((i / grid-columns)*100)%  

// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.
//
// Note that `.col-lg-12` doesn't get floated on purpose—there's no need since
// it's full-width.
@media media-screen-lg-desktop
  .container 
    max-width container-lg-desktop
  
  $float-left-large-screen-desktop
    float left

  for i in (1..11)
    .col-lg-{i}
      @extend $float-left-large-screen-desktop  
      width ((i / grid-columns)*100)%
  
  .col-lg-12
    width 100%

  .col-lg-push-0  
    left auto
  .col-lg-pull-0  
    right auto
  .col-lg-offset-0
    margin-left auto
  // Push ,pull and offsets columns for source order changes
  for i in (1..11)
    .col-lg-push-{i}
      left ((i / grid-columns)*100)%  
    .col-lg-pull-{i}
      right ((i / grid-columns)*100)%  
    .col-lg-offset-{i}
      margin-left ((i / grid-columns)*100)%  
